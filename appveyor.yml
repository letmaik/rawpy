os: Visual Studio 2015

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: cmd /E:ON /V:ON /C .\appveyor\run_with_env.cmd
    
    PYPI_USER: letmaik

    PYPI_PASS:
      secure: JMaE+BmBS1Wnw9QKySybvqvmfhh7XdQaNv6gwZnfonU=

  # Note that we use miniconda, so the minor versions are irrelevant here
  matrix:
    - PYTHON: C:\Python27_32
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      NUMPY_VERSION: "1.9"

    - PYTHON: C:\Python27_64
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      NUMPY_VERSION: "1.9"
      
    - PYTHON: C:\Python35_32
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      NUMPY_VERSION: "1.9"

    - PYTHON: C:\Python35_64
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      NUMPY_VERSION: "1.9"

    - PYTHON: C:\Python36_32
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      NUMPY_VERSION: "1.11"

    - PYTHON: C:\Python36_64
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      NUMPY_VERSION: "1.11"

    - PYTHON: C:\Python37_32
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
      NUMPY_VERSION: "1.14"

    - PYTHON: C:\Python37_64
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      NUMPY_VERSION: "1.14"

install:
  - dir "C:\"
  - dir "C:\Program Files\Microsoft SDKs\Windows"

  # Install Python and pip
  - ps: .\appveyor\install.ps1

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - CALL "%PYTHON%\\Scripts\\activate.bat"
  
  # create conda environment
  # jpeg and zlib are native libraries used during the CMake build of libraw.
  # Note that jasper is currently only available for Linux/macOS on conda.
  - conda create --yes --name pyenv_build python=%PYTHON_VERSION% numpy=%NUMPY_VERSION% cython jpeg zlib
  - activate pyenv_build

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  
  # output what's installed
  - pip freeze
    
  # Build the compiled extension.
  # -u disables output buffering which caused intermixing of lines
  #  when the external tools were started  
  - '%CMD_IN_ENV% python -u setup.py bdist_wheel'

build: false  # Not a C# project, build stuff at the install step instead.

test_script:
  - conda create --yes --name pyenv_test python=%PYTHON_VERSION% numpy scikit-image
  - activate pyenv_test
  - ps: ls dist\*.whl | % { pip install $_ }
  - pip install -r dev-requirements.txt
  - mkdir tmp_for_test
  - cd tmp_for_test
  - nosetests --verbosity=3 --nocapture ../test
  - cd ..

deploy_script:
  - ps: .\appveyor\pypi_deploy.ps1

artifacts:
  - path: 'dist\*.whl'